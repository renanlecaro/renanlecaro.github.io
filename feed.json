{
    "version": "https://jsonfeed.org/version/1",
    "title": "Renan LE CARO",
    "description": "",
    "home_page_url": "https://lecaro.me",
    "feed_url": "https://lecaro.me/feed.json",
    "user_comment": "",
    "author": {
        "name": "Renan LE CARO"
    },
    "items": [
        {
            "id": "https://lecaro.me/be-careful-what-you-ping-for.html",
            "url": "https://lecaro.me/be-careful-what-you-ping-for.html",
            "title": " Be careful what you ping for",
            "summary": "I have a setup to know when my main app, ciboulette.net, is down. It's based on statuscake, which pings my marketing site every 5 minutes, and also my main app. It used to ping a third endpoint, which was an order form deep inside my&hellip;",
            "content_html": "<p>I have a setup to know when my main app, ciboulette.net, is down.</p>\n<p>It's based on <a href=\"https://www.statuscake.com/\">statuscake</a>, which pings my marketing site every 5 minutes, and also my main app. </p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://lecaro.me/media/posts/14/Screenshot-from-2021-03-24-15-23-56.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://lecaro.me/media/posts/14/responsive/Screenshot-from-2021-03-24-15-23-56-xs.png 300w ,https://lecaro.me/media/posts/14/responsive/Screenshot-from-2021-03-24-15-23-56-sm.png 480w ,https://lecaro.me/media/posts/14/responsive/Screenshot-from-2021-03-24-15-23-56-md.png 768w ,https://lecaro.me/media/posts/14/responsive/Screenshot-from-2021-03-24-15-23-56-lg.png 1024w ,https://lecaro.me/media/posts/14/responsive/Screenshot-from-2021-03-24-15-23-56-xl.png 1360w ,https://lecaro.me/media/posts/14/responsive/Screenshot-from-2021-03-24-15-23-56-2xl.png 1600w\"  alt=\"Screenshot of statuscake\" width=\"649\" height=\"271\"></figure>\n<p>It used to ping a third endpoint, which was an order form deep inside my app. </p>\n<p>The idea was to check the the clients of my clients should be able to order veggies, so pinging a specific, real page would make sense.</p>\n<p>I also used to log every action that would happen on such an order, directly in an array within the \"order\" document.</p>\n<p>It means that every 5 minute, the document was getting a tiny bit bigger. </p>\n<p>Today, i tried to mongorestore a production dump on my local dev environment to get fresh data. It's very useful to see how the real data would look like in the new version, and lets me see missuses and bugs that i would miss otherwise. </p>\n<p>So i tried to import my production dump (the db needs renaming from \"ciboulette\" to \"meteor\" to work locally) </p>\n<pre>renan@renan-hp:~/cl/app$ cat dump/daily_21-03-24.backup.gzip | mongorestore --archive --gzip  --nsFrom='ciboulette.*' --nsTo='meteor.*' --uri=mongodb://127.0.0.1:3001/<br>2021-03-24T15:31:06.076+0100 preparing collections to restore from<br>2021-03-24T15:31:06.083+0100 reading metadata for meteor.shortUrls from archive on stdin<br>2021-03-24T15:31:06.102+0100 restoring meteor.shortUrls from archive on stdin<br>2021-03-24T15:31:06.263+0100 reading metadata for meteor.opens from archive on stdin<br>2021-03-24T15:31:06.278+0100 restoring meteor.opens from archive on stdin<br>2021-03-24T15:31:06.753+0100 reading metadata for meteor.Orders from archive on stdin<br>2021-03-24T15:31:06.767+0100 restoring meteor.Orders from archive on stdin<br>2021-03-24T15:31:07.308+0100 reading metadata for meteor.logs from archive on stdin<br>2021-03-24T15:31:07.318+0100 restoring meteor.logs from archive on stdin<br>2021-03-24T15:31:07.827+0100 no indexes to restore<br>2021-03-24T15:31:07.827+0100 finished restoring meteor.shortUrls (8224 documents, 0 failures)<br>2021-03-24T15:31:08.269+0100 no indexes to restore<br>2021-03-24T15:31:08.269+0100 finished restoring meteor.opens (21263 documents, 0 failures)<br>2021-03-24T15:31:08.503+0100 finished restoring meteor.Orders (32999 documents, 1 failure)<br>2021-03-24T15:31:08.503+0100 Failed: <strong>meteor.Orders: error restoring from archive</strong> on stdin: bulk write error: [{[{<strong>write to oplog failed: BadValue: object to insert exceeds cappedMaxSize</strong>}]}, {&lt;nil&gt;}]<br>2021-03-24T15:31:08.503+0100 32999 document(s) restored successfully. 1 document(s) failed to restore.</pre>\n<p>It took me quite a while to pinpoint the problem. </p>\n<p>Luckily, the same dump would import fine in a real mongod instance, the problem seemed to be only with the meteor provided development mongo instance. </p>\n<p>The problem seemed to be be with some order documents. </p>\n<p>So, first i wiped the local \"meteor\" db in mongod</p>\n<pre>mongo mongodb://127.0.0.1:27017/meteor --eval \"db.dropDatabase()\"</pre>\n<p>Then i imported the dump there</p>\n<pre>cat dump/daily_21-03-24.backup.gzip | mongorestore --archive --gzip  --nsFrom='ciboulette.*' --nsTo='meteor.*'</pre>\n<p>I tried removing all documents from db.Orders, dumping, and then importing that to meteor, it worked. But i was missing my main collection.</p>\n<p>I then used this script to find the biggest document and its _id within my mongo collection</p>\n<pre> mongo  mongodb://127.0.0.1:27017/meteor --eval \"(()=&gt;{var max=0,maxId=null; <strong>db.Orders</strong>.find().forEach(o=&gt;{var s=<strong>Object.bsonsize</strong>(o);if(s&gt;max){max=s;maxId=o._id}}); return {max,maxId}})()\"<br><br>MongoDB server version: 4.4.4<br>{ <strong>\"max\" : 14199831</strong>, \"maxId\" : \"GBeerkZ46dcjAgLtu\" }</pre>\n<p>14 199 831 bytes, holly molly ! About 14 megabytes of text in one document.</p>\n<p>A findOne query allowed me to see that it was the \"Order.logs\" field that was so full.</p>\n<p>So i cleaned up this field in  all documents :</p>\n<pre>renan@renan-hp:~/cl/app$ mongo mongodb://127.0.0.1:27017/meteor --eval 'db.Orders.update({logs:{ $exists:true}},<strong>{$unset:{logs:\"\"}},{multi:true}</strong>);'<br>MongoDB shell version v4.4.4<br>connecting to: mongodb://127.0.0.1:27017/meteor?compressors=disabled&amp;gssapiServiceName=mongodb<br>Implicit session: session { \"id\" : UUID(\"bb02fe49-5241-4beb-82ea-fbdc4c325998\") }<br>MongoDB server version: 4.4.4<br>WriteResult({ \"nMatched\" : 180383, \"nUpserted\" : 0, <strong>\"nModified\" : 180383</strong> })</pre>\n<p> And re-run the maximum size check </p>\n<pre>mongo mongodb://127.0.0.1:27017/meteor --eval \"(()=&gt;{var max=0,maxId=null; db.Orders.find().forEach(o=&gt;{var s=Object.bsonsize(o);if(s&gt;max){max=s;maxId=o._id}}); return {max,maxId}})()\"<br>{ \"max\" : <strong>7578</strong>, \"maxId\" : \"eYdGxbBKDNfKZYZw8\" }</pre>\n<p>Much, much better :)</p>\n<p>So, all that was left was to dump that data, load the dump in meteor and all was fine.</p>\n<p>I added a migration to clean that field in production too.  It will run on the next deploy. </p>\n<p> </p>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/oh-the-joy-of-e2e-testing.html",
            "url": "https://lecaro.me/oh-the-joy-of-e2e-testing.html",
            "title": "Oh, the joy of Meteor e2e testing !",
            "summary": "I'm setting up e2e testing on my Meteor app, ciboulette.net. I had done it in the past but after large UI changes i just removed the tests as they were completely stale and generally painful to work with : I'm trying again, this time using&hellip;",
            "content_html": "<p>I'm setting up e2e testing on my Meteor app, ciboulette.net.</p>\n<p><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">I had done it in the past but after large UI changes i just removed the tests as they were completely stale and generally painful to work with : </span></p>\n<ul>\n<li>they were <strong>brittle and/or slow</strong></li>\n<li>they were a <strong>pain to edit</strong>. </li>\n<li>they didn't run in <strong>CI</strong></li>\n</ul>\n<p><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">I'm trying again, this time using <strong>playwright.</strong></span></p>\n<p>To <strong>make the tests less brittle</strong>, i <span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">had to disable some of the \"smarts\" of the app to make the tests work at high speed  : </span></p>\n<ul>\n<li><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">Instead of deferring heavy workloads, I run them synchronously before returning from a method.</span></li>\n<li><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">My modal windows wait for the method result to come back from the server (no optimistic UI magic)</span></li>\n<li><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">I had some logic to ignore double clicks that I had to disable in e2e mode</span></li>\n<li>I completely mocked external services (google maps, google image, emails, sms, etc..)</li>\n</ul>\n<p>To <strong>make editing easier</strong>, I had to fix a few things :</p>\n<ul>\n<li>I start the e2e server with a different meteor local file, on a different port, with dedicated settings</li>\n<li><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">I don't use the headful mode because it always start in the wrong place.</span></li>\n<li>I take screenshots at every step, outputting the screenshot to one file that refreshes automatically when viewed with eog (eye of gnome) </li>\n<li>I use nodemon to restart the tests when i change them (but not when I change any other file) </li>\n<li>I start both my headless tests and eog with <strong><strong>npm-run-all</strong></strong></li>\n</ul>\n<p>Running the tests in <strong>github ci</strong></p>\n<ul>\n<li>The CI scrip uses <strong>start-server-and-test</strong> to start the meteor server in e2e mode and run the headless tests against it</li>\n<li>The e2e Ci script runs<strong> npm install</strong>, but all other scripts run <strong>npm install --production</strong>. Playwright is heavy and is not required to build the app so i've added it as a devDependency. The unit tests are lightweight so i've added jest as a normal dependency.</li>\n</ul>\n<p>The <strong>remaining challenge</strong> I have is to create snapshots at different stages of the test (page url, db content, cookies) so that i can skip most of the e2e tests suite when editing a small part of it. It's tricky, involves hardcoded mongo urls, some mongorestore and mongodump run with execSync .. and not working yet. </p>\n<p> </p>\n<p>Extract of my package.json scripts :</p>\n<pre>\"e2e:server\": \"METEOR_LOCAL_DIR=.meteor/e2e  meteor --port 4000 --settings settings.e2e.json\",<br>\"e2e:cli:showImages\": \"eog tests/e2e/last-test-state.png\",<br>\"e2e:cli:nodemon\": \"SNAPALL=true nodemon  --watch tests/e2e/01_signup.js tests/e2e/01_signup.js\",<br>\"e2e:cli\": \"run-p e2e:cli:* \",<br>\"e2e:ci:node\": \"node tests/e2e/01_signup.js \",<br>\"e2e:ci\": \"start-server-and-test e2e:server http://localhost:4000 e2e:ci:node\"</pre>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/my-3-favorite-playlists.html",
            "url": "https://lecaro.me/my-3-favorite-playlists.html",
            "title": "My 3 favorite playlists : house, trance and funk",
            "summary": "I have 3 playlists on Spotify I always come back to , thought i'd share them hereDeep house as a background music for lightweight tasks, and as a loud playlist for festive events.Psychedelic trance when I need a motivation surge for a tough bit of&hellip;",
            "content_html": "<p>I have 3 playlists on Spotify I always come back to , thought i'd share them here</p>\n<ul>\n<li><a href=\"https://open.spotify.com/playlist/4U1xZfxO1AsNbqWYKbfUnM?si=dTcARomPSLqMRaNHPvoWRw\">Deep house</a> as a background music for lightweight tasks, and as a loud playlist for festive events.</li>\n<li><a href=\"https://open.spotify.com/playlist/69gyd1SXiVhvfsyYS078f0?si=MnvGO1LTRhOy11neMwBHaQ\">Psychedelic trance</a> when I need a motivation surge for a tough bit of code. It can get tiring after a few hours</li>\n<li><a href=\"https://open.spotify.com/playlist/2BAkAh0GWqDwuSFEJsH1wJ?si=2y98meZORqaFBCfni2iwng\">Low volume funk</a> for events which involve people I don't know the music taste of, and music is not the focus of  the event. It's selected so that the tracks don't overpower the soundscape and sound good even at a low volume. </li>\n</ul>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/customizing-the-look-of-publii.html",
            "url": "https://lecaro.me/customizing-the-look-of-publii.html",
            "title": "Customizing the look of Publii",
            "summary": "I really like the look of the default Publii theme, however some modifications weren't quite working using the in-app options. I wanted this website to have a very low level of interactivity, i don't need a mobile hamburger menu for 2 short entries (code &amp;&hellip;",
            "content_html": "<p>I really like the look of the default Publii theme, however some modifications weren't quite working using the in-app options. I wanted this website to have a very low level of interactivity, i don't need a mobile hamburger menu for 2 short entries (code &amp; life). </p>\n<p>So I started looking for a different theme but I couldn't find what I was looking for, that is, a minimalist theme. I resolved to just strip things away from the default theme to make it lighter and JS free. </p>\n<p>Opening the default theme gave me the same feeling that I got when trying to customize the code of a 40$ admin panel. Lots of code, neatly organized, most of it unused.</p>\n<blockquote>\n<p>What is all this code, what is it for ? Oh, i can get rid of it.  </p>\n</blockquote>\n<p>I managed to strip down the source by removing the parts I wasn't interested in. I think now the design looks clean, and I got rid of most useless css and js I could find. I'm not sure that this is the right approach, as those changes definitely won't survive a theme update (but why would I want to update it ?) and are a bit hacky. I'm pretty sure those changes are only stored on my machine, so if I try to edit the website from somewhere else it will revert back to it's default look. </p>\n<p>However, i'm not too worried about this. This personal website is a playground for experimentation after all.</p>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/life-in-vladivostok.html",
            "url": "https://lecaro.me/life-in-vladivostok.html",
            "title": "Life in Владивосток",
            "summary": "I've been living in Vladivostok, Russia, since the end of February 2020. I'm a student here, learning the Russian language. I'm a bit older than the average student but my life is still very student-like anyway. I really enjoy the energy of younger friends and&hellip;",
            "content_html": "<p>I've been living in Vladivostok, Russia, since the end of February 2020. </p>\n<p>I'm a student here, learning the Russian language. I'm a bit older than the average student but my life is still very student-like anyway. I really enjoy the energy of younger friends and the large amount of free time we have.</p>\n<h2>Life is cheap </h2>\n<p>I'm renting a room on the DVFU campus, it costs barely 40€/month, but it's only possible to rent it as a student, the study itself costing around 140€/month. As a student, I can benefit from the very cheap student health insurance that costs about 50€/year. </p>\n<p>Overall, I'm spending less than 500€/month here to live quite comfortably. I'm happy to have found this opportunity. </p>\n<h2>Life is good</h2>\n<p>The Russian class starts at 10am every day. It lasts 2 hours, and is currently happening via Skype. That means I don't have to spend 3 hours in transport every day. When the confinement will be over though, we'll have to go back to physical classes, that happen in the city. Traffic is usually quite bad in the morning, and the trip without traffic from the FEFU campus to the city is about 1 hour without traffic, so it's not unusual to have to spend one hour thirty in transports to go to class. I really hope we'll have the option to keep our classes online, I find it way more convenient. </p>\n<p>We live near the sea and near nature, it's great. We've done countless barbecues, trekking trips and swimming sessions. </p>\n<p>The only scholarly thing I'm required to do to keep my student status is to be present in class. Doing the homework is recommended, but kind of optional. I don't do them anymore so that I can focus all my energy on the programming of <a href=\"https://ciboulette.net\">ciboulette.net</a>  </p>\n<h2>This too, shall pass</h2>\n<p>I won't stay eternally here, my motivation to learn Russian is lower than when I arrived, and my fascination for the country is now back to simple curiosity. </p>\n<p>I'll head back to Europe in December, to focus on the sales process of ciboulette. I'm thinking about moving to France first, to help my sister for a while with her setup in a new house. I'll do calling and development work when I have free time, and keep an eye on my niece at the same time. </p>\n<p>Then, my currently favored plan is to set myself up in Odessa, Ukraine, to enjoy the good weather, Russian speaking opportunities and affordable cost of living. French citizen get 6 months visa free there, which should be enough for me to know if I want to stay here longer or not. </p>\n<p> </p>\n<p>  </p>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/automating-backups-of-digital-ocean-meteor-up-install-to-your-ubuntu-workstation.html",
            "url": "https://lecaro.me/automating-backups-of-digital-ocean-meteor-up-install-to-your-ubuntu-workstation.html",
            "title": "Automating local backups of DO MUP on Ubuntu",
            "summary": "DO + MUP = 💙I've migrated my main project, https://ciboulette.net, from Heroku to digital ocean, with the help of the awesome meteor up tool that's still actively maintained. I wanted a way to automate the backups of production to my own computer. In meteor, the&hellip;",
            "content_html": "<h2>DO + MUP = 💙</h2>\n<p>I've migrated my main project, <a href=\"https://www.digitalocean.com/\">https://ciboulette.net</a>, from Heroku to <a href=\"https://www.digitalocean.com/\">digital ocean</a>, with the help of the awesome <a href=\"https://meteor-up.com/\">meteor up</a> tool that's still actively maintained.</p>\n<p>I wanted a way to automate the backups of production to my own computer. In meteor, the only thing really worth backing up is the content of the mongoDB.</p>\n<p><strong>We need two things : a script</strong> that does the backup, <strong>and a cron job</strong> to run regularly</p>\n<h2>Backup script</h2>\n<p>You just need to configure the two environment variables at the top (in bold)</p>\n<p><strong>daily_backup.sh</strong></p>\n<pre>#!/bin/sh<br><br># folder where to store the last 7 daily backups, without trailing slash<br>DUMPFOLDER=\"<strong>/home/renan/cl/app/dump</strong>\"<br><br># IP of your digital ocean droplet<br>DO_INSTANCE_IP=\"<strong>46.101.232.182</strong>\"<br><br># so that notifications know on which display to show when called from the cron tab<br>export DISPLAY=:0<br><br># Let it quit when it crash<br>set -e<br><br>DUMPFILE=\"$DUMPFOLDER/daily_$(date +\"%y-%m-%d\").backup.gzip\"<br><br>if [ ! -f $DUMPFILE ];<br>then<br>  continue<br>else<br>  echo \"Already done today\" &amp;&amp; exit 0<br>fi<br><br>notify-send \"Backing up ...\"<br><br># ssh to the instance, then ask the mongodb container to output an archive of all dbs, then stream that back to your machine. <br>ssh \"root@$DO_INSTANCE_IP\" \"docker exec mongodb mongodump --archive --gzip\" &gt; \"${DUMPFILE}\"<br><br># Only keep the last 7 dumps <br>ls -tp $DUMPFOLDER/ | grep -v '/$' | tail -n +8 | xargs -I {} rm -- $DUMPFOLDER/{}<br><br>notify-send \"... backup done.\"</pre>\n<p>Make sure the script is executable with <code>chmod +x daily_backup.sh</code></p>\n<h2>CRON setup</h2>\n<p>We will run this script every hour. The first time it runs it will do the backup, and the next time it will see the file exists already and just exit. The next day the filename will be different and therefore a new backup will be run. </p>\n<p>Open the cron editor : <code>crontab -e</code> </p>\n<p>Add the following line, modifying the path in bold to point to your script.  </p>\n<p><code>1 * * * * /<strong>home/renan/cl/app/.production/daily_backup.sh</strong> &gt;/dev/null 2&gt;&amp;1</code></p>\n<p>This will run the script every hour when minutes are equal to 1, so if you start your computer at 8:30 it will first run at 9:01</p>\n<p>The redirect after the command are to avoid having errors show up in the logs. Ubuntu is a bit confused when cron jobs generate outputs.  </p>\n<h2>How to restore such backup</h2>\n<p>Having backup is nice, but knowing out to restore them is better. </p>\n<pre>#!/bin/sh<br><br># folder with the dumps<br>DUMPFOLDER=\"<strong>/home/renan/cl/app/dump</strong>\"<br># IP of your digital ocean droplet<br>DO_INSTANCE_IP=\"<strong>46.101.232.182</strong>\"<br><br># Let it quit when it crash<br>set -e<br><br># find the latest backup file<br>LATEST_FILE=$(ls -t1 \"$DUMPFOLDER/\" |  head -n 1)<br>LATEST_DUMP=\"$DUMPFOLDER/$LATEST_FILE\"<br>echo \"Restoring to production from $LATEST_DUMP\"<br>read -p \"Press enter to continue ..\"<br><br># pipe file to the mongorestore inside the mongodb docker container inside the droplet <br>cat \"${LATEST_DUMP}\" | ssh \"root@$DO_INSTANCE_IP\" \"cat | docker exec -i mongodb mongorestore --archive --gzip --drop\"</pre>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/mermaid-gdocs.html",
            "url": "https://lecaro.me/mermaid-gdocs.html",
            "title": "Mermaid Gdocs",
            "summary": "Working at virtualQ, it happened a few times that I'd start a project with unclear requirements, then presented it to the rest of the team just to see everything needing to be changed or canceled. To avoid such disappointing outcome, I tried to make more&hellip;",
            "content_html": "<p>Working at virtualQ, it happened a few times that I'd start a project with unclear requirements, then presented it to the rest of the team just to see everything needing to be changed or canceled. </p>\n<p>To avoid such disappointing outcome, I tried to make more design docs. A design doc is roughly said a document that will detail all the possible solutions to a problem, and serve as a support for debate, ideas and discussions. After a design doc is accepted by the team, you can go ahead with the development with less risk of requirements being inadequate. </p>\n<p>Most features would include some back end and front end elements, and some user flows. Trying to make the documents more readable, I added as many sequence diagrams as possible. Sequence diagrams are excellent at communicating a process. Their layout forces you to be succinct  as there's not much space for walls of texts and unnecessary details.</p>\n<p>I first edited the diagrams in the excellent <a href=\"https://www.websequencediagrams.com/\">websequencediagrams.com</a> and pasted a screenshot in the google documents, but that was a bit of a pain to maintain. This tool keeps a copy of the source code, so i'd just need to edit it and update the resulting picture in the google document, but no one else had access to said source code. I thought i could just save the source code in the image description field in google docs, to make it easier to update the diagram for anyone in the team.</p>\n<p>This is when I realized i could use this \"trick\" to create a <a href=\"https://gsuite.google.com/marketplace/app/mermaid/636321283856?pann=cwsdp&amp;hl=en\">google docs add-on</a>. In a classic case of \"putting off writing documentation by focusing on the tools used in documenting\", I followed the (super confusing) tutorials on the google documentation website for G Suite add-ons. </p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://lecaro.me/media/posts/8/Screenshot-from-2020-06-05-08-52-21.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://lecaro.me/media/posts/8/responsive/Screenshot-from-2020-06-05-08-52-21-xs.png 300w ,https://lecaro.me/media/posts/8/responsive/Screenshot-from-2020-06-05-08-52-21-sm.png 480w ,https://lecaro.me/media/posts/8/responsive/Screenshot-from-2020-06-05-08-52-21-md.png 768w ,https://lecaro.me/media/posts/8/responsive/Screenshot-from-2020-06-05-08-52-21-lg.png 1024w ,https://lecaro.me/media/posts/8/responsive/Screenshot-from-2020-06-05-08-52-21-xl.png 1360w ,https://lecaro.me/media/posts/8/responsive/Screenshot-from-2020-06-05-08-52-21-2xl.png 1600w\"  alt=\"Screenshot of the mermaid add-on in the g-suite marketplace\" width=\"989\" height=\"731\">\n<figcaption >The mermaid add-on listed in the g-suite marketplace </figcaption>\n</figure>\n<p> </p>\n<p>The project has evolved a bit with time but stays relatively simple in terms of code. It has gathered quite a lot of users (10K) despite me not putting any efforts in marketing it. I guess we have a product-market fit here, but no business plan at all. This is really just a few lines of JavaScript to make the power of the mermaid JS library available in google docs. I don't think it makes sense to charge for it, and it costs nothing to keep it running. </p>\n<p>I've made it open source, with the code hosted on github, feel free to have a look there : <a href=\"https://github.com/renanlecaro/mermaid-gdocs\">https://github.com/renanlecaro/mermaid-gdocs</a></p>\n<p><a href=\"https://gsuite.google.com/marketplace/app/mermaid/636321283856?pann=cwsdp&amp;hl=en\"> The mermaid add-on listed in the g-suite marketplace </a></p>\n<p> </p>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/documenting-systems.html",
            "url": "https://lecaro.me/documenting-systems.html",
            "title": "Documenting systems",
            "summary": "Back when I was working at virtualQ, I had to do some documentation. At first I didn't quite enjoy it, feeling like this was a chore. But documenting a system can be a very interesting task. I also had to explain our systems to new&hellip;",
            "content_html": "<p>Back when I was working at virtualQ, I had to do some documentation. At first I didn't quite enjoy it, feeling like this was a chore. But <strong>documenting a system can be a very interesting task</strong>. I also had to explain our systems to new hires after we raised some funds and quickly grew the team. </p>\n<p>We had a <strong>documentation website for our API</strong>, based on markdown. It was very technical, with manually copy pasted sample API responses. It wasn't very visual. It had endpoints documented publicly while they were only for internal use. It had a lot of outdated content, and felt more like a patchwork of data bits than a comprehensible thing.</p>\n<p>My fist step was to <strong>remove the documentation off irrelevant endpoints</strong>. The docs were kind of an hybrid between a public api documentation and some internal guide for new hires. I made dedicated to customers trying to use our api only.</p>\n<p>It still had a<strong> \"wall of text\" feeling though</strong>. To make it more palatable, I tried to add visuals. Integrating <a href=\"https://mermaidjs.github.io/\">mermaid</a> to the docs was quite easy, I styled it roughly with some css rules. <strong>Sequence diagrams are awesome</strong>. I used them to communicate the different workflow we had and some typical scenarios the clients would like to use our API for. </p>\n<p>We had a <strong>complex state machine</strong> that tracks the state of a caller through our system. I tried to <strong>represent it as a graph</strong>, but that was a bit too cluttered, so i split it in two graphs and removed some of the transitions that were not normally happening. </p>\n<p>Finally, I wanted to fix our <strong>outdated sample API requests and responses</strong>. Our API was evolving rapidly and having outdated samples was more confusing than helpful. I created a <strong>tiny script that curl commands and update the API answer samples</strong> with them. I had to do some dirty grepping on the answers to replace dates, ids, etc .. to avoid polluting the git log with meaningless edits every time we'd refresh the samples.</p>\n<p>We deployed the new version of the documentation. Some of our new hires still had some use for the old version (that documented more endpoints) so we added a link to it. <strong>We don't have any tracking on the docs website</strong>, so I have no idea what the readership is, but it was great as a learning experience.</p>\n<p>It made me love mermaidJS so much, that I eventually ended up building a <a href=\"https://renanlecaro.github.io/mermaid-gdocs/\">google docs addon</a> for it. </p>\n<p>I like the idea of <strong>writing tutorials as markdown, with E2E test instructions mixed in</strong>, and outputting the result (text, screenshots, response samples) as a document. It would guarantee that the tutorials stay in sync with the product and don't become outdated, with always fresh screenshots. It would make the task of writing E2E tests for some web app a dual purpose task, where you'd <strong>generate both a helpful document and some smoke tests</strong> in one go. </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/ciboulettenet-a-web-platform-for-vegetable-farmers.html",
            "url": "https://lecaro.me/ciboulettenet-a-web-platform-for-vegetable-farmers.html",
            "title": "Ciboulette.net : produces email marketing ",
            "summary": "It all started about 7 years ago. My mother got laid off and had to find a job. She already had a large garden and decided to make a living selling vegetables. She invested little capital as the activity was supposed to last only a&hellip;",
            "content_html": "<p>It all started about 7 years ago. </p>\n<p>My mother got laid off and had to find a job. She already had a large garden and decided to <strong>make a living selling vegetables</strong>. She invested little capital as the activity was supposed to last only a few years until retirement. </p>\n<p>Therefore the production was small. Like, very small. She <strong>tried selling at the local market</strong> but you need large volumes to make the trip worth it. Clients always leave the last vegetables left in each box, they don't want to take the last few tomatoes. Turns out, those tomatoes were just the only ones she had at first.</p>\n<p>So she decided to try another sales channel : <strong>she would sell vegetables by email</strong>. Each week, she'd send a list of all the produces that were available in the garden. The clients (mostly friends and acquaintances at first) were free to order by simply replying to the email with what they wanted. At the end of the week, she'd prepare each order and clients would come to the farm to pick up their order. They would pay directly on location.</p>\n<p>Preparing orders for clients is <strong>a lot of extra work</strong>, taking orders is also quite a process, and the whole thing was a bit inefficient, but she did manage to sell vegetables. </p>\n<p>I was a student at the time at university and needed a project for a university class. With a few friends we decided to start a project that'd <strong>automate most of the process</strong> of offering products and taking orders.</p>\n<p>The business model was to create a great app for my mother, and sell it to other farmers later on as a SAAS.</p>\n<p>The first iteration was based on AngularJS, mongo, express. It was hosted on heroku. The second iteration was based on <strong>meteor</strong> with everything real time. This is the <strong>version that's still running today</strong>.</p>\n<p>The project has been running for many years. The farmer's contribution (14.90€/month) pays for the server, but with only 8 users the app is <strong>barely generating a tiny profit</strong>. I could, in theory, get a lot more users, the response to my cold calls was excellent.</p>\n<blockquote>\n<p>But this project taught me something : being responsible for a professional tool that can crash at any moment is no fun.</p>\n</blockquote>\n<p>The risk of the app crashing, the emails ending in spam, the reminder SMSs failing, etc .. is quite high, and the impact is that farmers can end up blocked in their work, and lose sales. </p>\n<p>Today, i tend to <strong>prefer creating completely free side projects</strong>, because it stresses me less to have a program crash if said program is free to use. It's also forcing me to create very lean applications that tend to be <strong>frontend only</strong>. Therefore, they can be hosted for free indefinitely. </p>\n<p>I'm still interested in the SAAS model, but I now keep in mind that <strong>being on call 24/7 limits you freedom</strong>. I live in Russia now, and would love to spend two weeks in the Trans-Siberian. But that's mean spending two weeks doing support from a train in the middle of nowhere. That's a no-go.   </p>\n<p>So, next time, I'll think a bit more before creating a product people will rely on. </p>\n<p> </p>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        },
        {
            "id": "https://lecaro.me/the-fefu-campus.html",
            "url": "https://lecaro.me/the-fefu-campus.html",
            "title": "The FEFU Campus",
            "summary": "This is really just an excuse to try displaying a few photos in Publii",
            "content_html": "<p>This is really just an excuse to try displaying a few photos in Publii</p>\n<div class=\"gallery-wrapper gallery-wrapper--wide\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"4\">\n<figure class=\"gallery__item\"><a href=\"https://lecaro.me/media/posts/5/gallery/DSC_3034-1.jpg\" data-size=\"4276x2836\"><img loading=\"lazy\" src=\"https://lecaro.me/media/posts/5/gallery/DSC_3034-1-thumbnail.jpg\" alt=\"The bridge to the island\" width=\"720\" height=\"478\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://lecaro.me/media/posts/5/gallery/DSC_3026-1.jpg\" data-size=\"2836x2836\"><img loading=\"lazy\" src=\"https://lecaro.me/media/posts/5/gallery/DSC_3026-1-thumbnail.jpg\" alt=\"Reflections of the campus in the sea\" width=\"720\" height=\"720\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://lecaro.me/media/posts/5/gallery/DSC_3048.jpg\" data-size=\"4276x2836\"><img loading=\"lazy\" src=\"https://lecaro.me/media/posts/5/gallery/DSC_3048-thumbnail.jpg\" alt=\"Campus building, they were lit by two different light sources, but I accentuated that quite a bit\" width=\"720\" height=\"478\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://lecaro.me/media/posts/5/gallery/DSC_3042.jpg\" data-size=\"2836x2836\"><img loading=\"lazy\" src=\"https://lecaro.me/media/posts/5/gallery/DSC_3042-thumbnail.jpg\" alt=\"Construction site for the new university buildings\" width=\"720\" height=\"720\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://lecaro.me/media/posts/5/gallery/DSC_3024.jpg\" data-size=\"2836x2836\"><img loading=\"lazy\" src=\"https://lecaro.me/media/posts/5/gallery/DSC_3024-thumbnail.jpg\" alt=\"Another view of the bridge\" width=\"720\" height=\"720\"></a></figure>\n</div></div>",
            "author": {
                "name": "Renan LE CARO"
            },
            "tags": [
                   "Blog post"
            ],
            "date_published": "2021-03-24T15:49:42+01:00",
            "date_modified": "2021-03-24T15:49:42+01:00"
        }
    ]
}
